[package]
name = "instancing"
version = "0.1.0"
edition = "2021"

[dependencies]
hello-wgpu.workspace = true
cfg-if.workspace = true
cgmath.workspace = true
log.workspace = true
pollster.workspace = true
rand.workspace = true
serde.workspace = true
winit.workspace = true
env_logger.workspace = true
wgpu.workspace = true

[build-dependencies]
anyhow = "1.0"
fs_extra = "1.2"
glob = "0.3"

[target.'cfg(target_arch = "wasm32")'.dependencies]
console_error_panic_hook = "0.1.6" # Configures the `panic!` macro to send errors to the JS console
console_log = "1.0" # Implements the `log` API, sends all logs to the JS console
reqwest = { version = "0.12", features = [ "json" ] } # Handle resource loading requests
wasm-bindgen = "0.2" # Generates boilerplate code to tell the browser how to use this crate, exposes methods in Rust that can be used in JS and vice-versa
wasm-bindgen-futures = "0.4"
web-sys = { version = "0.3", features = [ # Bindings for JS Web APIs
    "Document",
    "Window",
    "Element",
    "Location",
    "Clipboard",
]} 
wgpu = { version = "0.19", features = [ "webgpu" ] }
getrandom = { version = "0.2", features = [ "js" ] } # Generates random numbers in JS, see https://github.com/rust-random/getrandom#
web-time = "1.1"

[lib]
crate-type = ["cdylib", "rlib"]