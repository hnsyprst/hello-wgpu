[package]
name = "hello-wgpu"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
anyhow.workspace = true
bytemuck.workspace = true
cfg-if.workspace = true
cgmath.workspace = true
egui.workspace = true
egui-wgpu.workspace = true
egui-winit.workspace = true
env_logger.workspace = true
log.workspace = true
pollster.workspace = true
rand.workspace = true
serde.workspace = true
serde_json.workspace = true
tobj.workspace = true
winit.workspace = true
wgpu.workspace = true

[workspace]
members = [
    "examples/*",
]

[workspace.dependencies]
hello-wgpu = { version = "0.1.0", path = "." }
anyhow = "1.0"
bytemuck = { version = "1.12", features = [ "derive" ] }
cfg-if = "1" # Makes platform-specific code more manageable
cgmath = "0.18"
egui = "0.26.0"
egui-wgpu = { version = "0.26.0", features = [ "winit" ] }
egui-winit = { version = "0.26.0", default-features = false }
env_logger = "0.10"
log = "0.4"
pollster = "0.3"
rand = "0.8"
serde = { version = "1.0", features = [ "derive" ] }
serde_json = "1.0"
tobj = { version = "3.2.1", features = [ "async" ] }
winit = "0.29"
wgpu = "0.19"

[dependencies.image]
version = "0.24"
default-features = false
features = [ "png", "jpeg" ]

[target.'cfg(target_arch = "wasm32")'.dependencies]
console_error_panic_hook = "0.1.6" # Configures the `panic!` macro to send errors to the JS console
console_log = "1.0" # Implements the `log` API, sends all logs to the JS console
reqwest = { version = "0.12", features = [ "json" ] } # Handle resource loading requests
wasm-bindgen = "0.2" # Generates boilerplate code to tell the browser how to use this crate, exposes methods in Rust that can be used in JS and vice-versa
wasm-bindgen-futures = "0.4"
web-sys = { version = "0.3", features = [ # Bindings for JS Web APIs
    "Document",
    "Window",
    "Element",
    "Location",
    "Clipboard",
]} 
wgpu = { version = "0.19", features = [ "webgpu" ] }
getrandom = { version = "0.2", features = [ "js" ] } # Generates random numbers in JS, see https://github.com/rust-random/getrandom#
web-time = "1.1"

[lib]
crate-type = ["cdylib", "rlib"]